class Solution {
public:
    bool repeatedSubstringPattern(string s) {
        int n= s.size();
        int sqrt_n= sqrt(n);
        if(n==1){return false;}
        vector<int> vec;
        for(int i= 1; i<= sqrt_n; i++){
            if(n%i==0){vec.push_back(i);}
        }
        for(int i= vec.size()-1; i>0; i--){
            vec.push_back(n/vec[i]);
        }
        bool flag= true;
        for(int k= 0; k< vec.size(); k++){
            flag= true;
            string l_s= s.substr(0,vec[k]);
            for(int i= 1; i< s.size()/vec[k]; i++){
                if(!flag){break;}
                for(int j= 0; j< vec[k]; j++){
                    if(l_s[j]!=s[i*vec[k]+j]){flag= false;}
                }
            }
            if(flag){return true;}
        }
        return false;
    }
};
